{"ast":null,"code":"/*\nLanguage: AsciiDoc\nRequires: xml.js\nAuthor: Dan Allen <dan.j.allen@gmail.com>\nWebsite: http://asciidoc.org\nDescription: A semantic, text-based document format that can be exported to HTML, DocBook and other backends.\nCategory: markup\n*/\n\n/** @type LanguageFn */\nfunction asciidoc(hljs) {\n  return {\n    name: 'AsciiDoc',\n    aliases: ['adoc'],\n    contains: [// block comment\n    hljs.COMMENT('^/{4,}\\\\n', '\\\\n/{4,}$', // can also be done as...\n    // '^/{4,}$',\n    // '^/{4,}$',\n    {\n      relevance: 10\n    }), // line comment\n    hljs.COMMENT('^//', '$', {\n      relevance: 0\n    }), // title\n    {\n      className: 'title',\n      begin: '^\\\\.\\\\w.*$'\n    }, // example, admonition & sidebar blocks\n    {\n      begin: '^[=\\\\*]{4,}\\\\n',\n      end: '\\\\n^[=\\\\*]{4,}$',\n      relevance: 10\n    }, // headings\n    {\n      className: 'section',\n      relevance: 10,\n      variants: [{\n        begin: '^(={1,5}) .+?( \\\\1)?$'\n      }, {\n        begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$'\n      }]\n    }, // document attributes\n    {\n      className: 'meta',\n      begin: '^:.+?:',\n      end: '\\\\s',\n      excludeEnd: true,\n      relevance: 10\n    }, // block attributes\n    {\n      className: 'meta',\n      begin: '^\\\\[.+?\\\\]$',\n      relevance: 0\n    }, // quoteblocks\n    {\n      className: 'quote',\n      begin: '^_{4,}\\\\n',\n      end: '\\\\n_{4,}$',\n      relevance: 10\n    }, // listing and literal blocks\n    {\n      className: 'code',\n      begin: '^[\\\\-\\\\.]{4,}\\\\n',\n      end: '\\\\n[\\\\-\\\\.]{4,}$',\n      relevance: 10\n    }, // passthrough blocks\n    {\n      begin: '^\\\\+{4,}\\\\n',\n      end: '\\\\n\\\\+{4,}$',\n      contains: [{\n        begin: '<',\n        end: '>',\n        subLanguage: 'xml',\n        relevance: 0\n      }],\n      relevance: 10\n    }, // lists (can only capture indicators)\n    {\n      className: 'bullet',\n      begin: '^(\\\\*+|-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\n    }, // admonition\n    {\n      className: 'symbol',\n      begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\n      relevance: 10\n    }, // inline strong\n    {\n      className: 'strong',\n      // must not follow a word character or be followed by an asterisk or space\n      begin: '\\\\B\\\\*(?![\\\\*\\\\s])',\n      end: '(\\\\n{2}|\\\\*)',\n      // allow escaped asterisk followed by word char\n      contains: [{\n        begin: '\\\\\\\\*\\\\w',\n        relevance: 0\n      }]\n    }, // inline emphasis\n    {\n      className: 'emphasis',\n      // must not follow a word character or be followed by a single quote or space\n      begin: '\\\\B\\'(?![\\'\\\\s])',\n      end: '(\\\\n{2}|\\')',\n      // allow escaped single quote followed by word char\n      contains: [{\n        begin: '\\\\\\\\\\'\\\\w',\n        relevance: 0\n      }],\n      relevance: 0\n    }, // inline emphasis (alt)\n    {\n      className: 'emphasis',\n      // must not follow a word character or be followed by an underline or space\n      begin: '_(?![_\\\\s])',\n      end: '(\\\\n{2}|_)',\n      relevance: 0\n    }, // inline smart quotes\n    {\n      className: 'string',\n      variants: [{\n        begin: \"``.+?''\"\n      }, {\n        begin: \"`.+?'\"\n      }]\n    }, // inline code snippets (TODO should get same treatment as strong and emphasis)\n    {\n      className: 'code',\n      begin: '(`.+?`|\\\\+.+?\\\\+)',\n      relevance: 0\n    }, // indented literal block\n    {\n      className: 'code',\n      begin: '^[ \\\\t]',\n      end: '$',\n      relevance: 0\n    }, // horizontal rules\n    {\n      begin: '^\\'{3,}[ \\\\t]*$',\n      relevance: 10\n    }, // images and links\n    {\n      begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+?\\\\[[^[]*?\\\\]',\n      returnBegin: true,\n      contains: [{\n        begin: '(link|image:?):',\n        relevance: 0\n      }, {\n        className: 'link',\n        begin: '\\\\w',\n        end: '[^\\\\[]+',\n        relevance: 0\n      }, {\n        className: 'string',\n        begin: '\\\\[',\n        end: '\\\\]',\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      }],\n      relevance: 10\n    }]\n  };\n}\n\nmodule.exports = asciidoc;","map":{"version":3,"sources":["/Users/playneko/Desktop/workspace/playneko-react/node_modules/lowlight/node_modules/highlight.js/lib/languages/asciidoc.js"],"names":["asciidoc","hljs","name","aliases","contains","COMMENT","relevance","className","begin","end","variants","excludeEnd","subLanguage","returnBegin","excludeBegin","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAO;AACLC,IAAAA,IAAI,EAAE,UADD;AAELC,IAAAA,OAAO,EAAE,CAAC,MAAD,CAFJ;AAGLC,IAAAA,QAAQ,EAAE,CACR;AACAH,IAAAA,IAAI,CAACI,OAAL,CACE,WADF,EAEE,WAFF,EAGE;AACA;AACA;AACA;AACEC,MAAAA,SAAS,EAAE;AADb,KANF,CAFQ,EAYR;AACAL,IAAAA,IAAI,CAACI,OAAL,CACE,KADF,EAEE,GAFF,EAGE;AACEC,MAAAA,SAAS,EAAE;AADb,KAHF,CAbQ,EAoBR;AACA;AACEC,MAAAA,SAAS,EAAE,OADb;AAEEC,MAAAA,KAAK,EAAE;AAFT,KArBQ,EAyBR;AACA;AACEA,MAAAA,KAAK,EAAE,gBADT;AAEEC,MAAAA,GAAG,EAAE,iBAFP;AAGEH,MAAAA,SAAS,EAAE;AAHb,KA1BQ,EA+BR;AACA;AACEC,MAAAA,SAAS,EAAE,SADb;AAEED,MAAAA,SAAS,EAAE,EAFb;AAGEI,MAAAA,QAAQ,EAAE,CACR;AACEF,QAAAA,KAAK,EAAE;AADT,OADQ,EAIR;AACEA,QAAAA,KAAK,EAAE;AADT,OAJQ;AAHZ,KAhCQ,EA4CR;AACA;AACED,MAAAA,SAAS,EAAE,MADb;AAEEC,MAAAA,KAAK,EAAE,QAFT;AAGEC,MAAAA,GAAG,EAAE,KAHP;AAIEE,MAAAA,UAAU,EAAE,IAJd;AAKEL,MAAAA,SAAS,EAAE;AALb,KA7CQ,EAoDR;AACA;AACEC,MAAAA,SAAS,EAAE,MADb;AAEEC,MAAAA,KAAK,EAAE,aAFT;AAGEF,MAAAA,SAAS,EAAE;AAHb,KArDQ,EA0DR;AACA;AACEC,MAAAA,SAAS,EAAE,OADb;AAEEC,MAAAA,KAAK,EAAE,WAFT;AAGEC,MAAAA,GAAG,EAAE,WAHP;AAIEH,MAAAA,SAAS,EAAE;AAJb,KA3DQ,EAiER;AACA;AACEC,MAAAA,SAAS,EAAE,MADb;AAEEC,MAAAA,KAAK,EAAE,kBAFT;AAGEC,MAAAA,GAAG,EAAE,kBAHP;AAIEH,MAAAA,SAAS,EAAE;AAJb,KAlEQ,EAwER;AACA;AACEE,MAAAA,KAAK,EAAE,aADT;AAEEC,MAAAA,GAAG,EAAE,aAFP;AAGEL,MAAAA,QAAQ,EAAE,CAAC;AACTI,QAAAA,KAAK,EAAE,GADE;AAETC,QAAAA,GAAG,EAAE,GAFI;AAGTG,QAAAA,WAAW,EAAE,KAHJ;AAITN,QAAAA,SAAS,EAAE;AAJF,OAAD,CAHZ;AASEA,MAAAA,SAAS,EAAE;AATb,KAzEQ,EAoFR;AACA;AACEC,MAAAA,SAAS,EAAE,QADb;AAEEC,MAAAA,KAAK,EAAE;AAFT,KArFQ,EAyFR;AACA;AACED,MAAAA,SAAS,EAAE,QADb;AAEEC,MAAAA,KAAK,EAAE,4CAFT;AAGEF,MAAAA,SAAS,EAAE;AAHb,KA1FQ,EA+FR;AACA;AACEC,MAAAA,SAAS,EAAE,QADb;AAEE;AACAC,MAAAA,KAAK,EAAE,oBAHT;AAIEC,MAAAA,GAAG,EAAE,cAJP;AAKE;AACAL,MAAAA,QAAQ,EAAE,CAAC;AACTI,QAAAA,KAAK,EAAE,UADE;AAETF,QAAAA,SAAS,EAAE;AAFF,OAAD;AANZ,KAhGQ,EA2GR;AACA;AACEC,MAAAA,SAAS,EAAE,UADb;AAEE;AACAC,MAAAA,KAAK,EAAE,kBAHT;AAIEC,MAAAA,GAAG,EAAE,aAJP;AAKE;AACAL,MAAAA,QAAQ,EAAE,CAAC;AACTI,QAAAA,KAAK,EAAE,WADE;AAETF,QAAAA,SAAS,EAAE;AAFF,OAAD,CANZ;AAUEA,MAAAA,SAAS,EAAE;AAVb,KA5GQ,EAwHR;AACA;AACEC,MAAAA,SAAS,EAAE,UADb;AAEE;AACAC,MAAAA,KAAK,EAAE,aAHT;AAIEC,MAAAA,GAAG,EAAE,YAJP;AAKEH,MAAAA,SAAS,EAAE;AALb,KAzHQ,EAgIR;AACA;AACEC,MAAAA,SAAS,EAAE,QADb;AAEEG,MAAAA,QAAQ,EAAE,CACR;AACEF,QAAAA,KAAK,EAAE;AADT,OADQ,EAIR;AACEA,QAAAA,KAAK,EAAE;AADT,OAJQ;AAFZ,KAjIQ,EA4IR;AACA;AACED,MAAAA,SAAS,EAAE,MADb;AAEEC,MAAAA,KAAK,EAAE,mBAFT;AAGEF,MAAAA,SAAS,EAAE;AAHb,KA7IQ,EAkJR;AACA;AACEC,MAAAA,SAAS,EAAE,MADb;AAEEC,MAAAA,KAAK,EAAE,SAFT;AAGEC,MAAAA,GAAG,EAAE,GAHP;AAIEH,MAAAA,SAAS,EAAE;AAJb,KAnJQ,EAyJR;AACA;AACEE,MAAAA,KAAK,EAAE,iBADT;AAEEF,MAAAA,SAAS,EAAE;AAFb,KA1JQ,EA8JR;AACA;AACEE,MAAAA,KAAK,EAAE,6DADT;AAEEK,MAAAA,WAAW,EAAE,IAFf;AAGET,MAAAA,QAAQ,EAAE,CACR;AACEI,QAAAA,KAAK,EAAE,iBADT;AAEEF,QAAAA,SAAS,EAAE;AAFb,OADQ,EAKR;AACEC,QAAAA,SAAS,EAAE,MADb;AAEEC,QAAAA,KAAK,EAAE,KAFT;AAGEC,QAAAA,GAAG,EAAE,SAHP;AAIEH,QAAAA,SAAS,EAAE;AAJb,OALQ,EAWR;AACEC,QAAAA,SAAS,EAAE,QADb;AAEEC,QAAAA,KAAK,EAAE,KAFT;AAGEC,QAAAA,GAAG,EAAE,KAHP;AAIEK,QAAAA,YAAY,EAAE,IAJhB;AAKEH,QAAAA,UAAU,EAAE,IALd;AAMEL,QAAAA,SAAS,EAAE;AANb,OAXQ,CAHZ;AAuBEA,MAAAA,SAAS,EAAE;AAvBb,KA/JQ;AAHL,GAAP;AA6LD;;AAEDS,MAAM,CAACC,OAAP,GAAiBhB,QAAjB","sourcesContent":["/*\nLanguage: AsciiDoc\nRequires: xml.js\nAuthor: Dan Allen <dan.j.allen@gmail.com>\nWebsite: http://asciidoc.org\nDescription: A semantic, text-based document format that can be exported to HTML, DocBook and other backends.\nCategory: markup\n*/\n\n/** @type LanguageFn */\nfunction asciidoc(hljs) {\n  return {\n    name: 'AsciiDoc',\n    aliases: ['adoc'],\n    contains: [\n      // block comment\n      hljs.COMMENT(\n        '^/{4,}\\\\n',\n        '\\\\n/{4,}$',\n        // can also be done as...\n        // '^/{4,}$',\n        // '^/{4,}$',\n        {\n          relevance: 10\n        }\n      ),\n      // line comment\n      hljs.COMMENT(\n        '^//',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      // title\n      {\n        className: 'title',\n        begin: '^\\\\.\\\\w.*$'\n      },\n      // example, admonition & sidebar blocks\n      {\n        begin: '^[=\\\\*]{4,}\\\\n',\n        end: '\\\\n^[=\\\\*]{4,}$',\n        relevance: 10\n      },\n      // headings\n      {\n        className: 'section',\n        relevance: 10,\n        variants: [\n          {\n            begin: '^(={1,5}) .+?( \\\\1)?$'\n          },\n          {\n            begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$'\n          }\n        ]\n      },\n      // document attributes\n      {\n        className: 'meta',\n        begin: '^:.+?:',\n        end: '\\\\s',\n        excludeEnd: true,\n        relevance: 10\n      },\n      // block attributes\n      {\n        className: 'meta',\n        begin: '^\\\\[.+?\\\\]$',\n        relevance: 0\n      },\n      // quoteblocks\n      {\n        className: 'quote',\n        begin: '^_{4,}\\\\n',\n        end: '\\\\n_{4,}$',\n        relevance: 10\n      },\n      // listing and literal blocks\n      {\n        className: 'code',\n        begin: '^[\\\\-\\\\.]{4,}\\\\n',\n        end: '\\\\n[\\\\-\\\\.]{4,}$',\n        relevance: 10\n      },\n      // passthrough blocks\n      {\n        begin: '^\\\\+{4,}\\\\n',\n        end: '\\\\n\\\\+{4,}$',\n        contains: [{\n          begin: '<',\n          end: '>',\n          subLanguage: 'xml',\n          relevance: 0\n        }],\n        relevance: 10\n      },\n      // lists (can only capture indicators)\n      {\n        className: 'bullet',\n        begin: '^(\\\\*+|-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\n      },\n      // admonition\n      {\n        className: 'symbol',\n        begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\n        relevance: 10\n      },\n      // inline strong\n      {\n        className: 'strong',\n        // must not follow a word character or be followed by an asterisk or space\n        begin: '\\\\B\\\\*(?![\\\\*\\\\s])',\n        end: '(\\\\n{2}|\\\\*)',\n        // allow escaped asterisk followed by word char\n        contains: [{\n          begin: '\\\\\\\\*\\\\w',\n          relevance: 0\n        }]\n      },\n      // inline emphasis\n      {\n        className: 'emphasis',\n        // must not follow a word character or be followed by a single quote or space\n        begin: '\\\\B\\'(?![\\'\\\\s])',\n        end: '(\\\\n{2}|\\')',\n        // allow escaped single quote followed by word char\n        contains: [{\n          begin: '\\\\\\\\\\'\\\\w',\n          relevance: 0\n        }],\n        relevance: 0\n      },\n      // inline emphasis (alt)\n      {\n        className: 'emphasis',\n        // must not follow a word character or be followed by an underline or space\n        begin: '_(?![_\\\\s])',\n        end: '(\\\\n{2}|_)',\n        relevance: 0\n      },\n      // inline smart quotes\n      {\n        className: 'string',\n        variants: [\n          {\n            begin: \"``.+?''\"\n          },\n          {\n            begin: \"`.+?'\"\n          }\n        ]\n      },\n      // inline code snippets (TODO should get same treatment as strong and emphasis)\n      {\n        className: 'code',\n        begin: '(`.+?`|\\\\+.+?\\\\+)',\n        relevance: 0\n      },\n      // indented literal block\n      {\n        className: 'code',\n        begin: '^[ \\\\t]',\n        end: '$',\n        relevance: 0\n      },\n      // horizontal rules\n      {\n        begin: '^\\'{3,}[ \\\\t]*$',\n        relevance: 10\n      },\n      // images and links\n      {\n        begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+?\\\\[[^[]*?\\\\]',\n        returnBegin: true,\n        contains: [\n          {\n            begin: '(link|image:?):',\n            relevance: 0\n          },\n          {\n            className: 'link',\n            begin: '\\\\w',\n            end: '[^\\\\[]+',\n            relevance: 0\n          },\n          {\n            className: 'string',\n            begin: '\\\\[',\n            end: '\\\\]',\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          }\n        ],\n        relevance: 10\n      }\n    ]\n  };\n}\n\nmodule.exports = asciidoc;\n"]},"metadata":{},"sourceType":"script"}