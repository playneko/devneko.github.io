{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nexport default function MainListModel() {\n  _s();\n\n  // 추가 데이터를 로드하는지 아닌지를 담기위한 state\n  const [fetching, setFetching] = useState(false); // 리스트 데이터 저장\n\n  const [jsonData, jsonDataSet] = useState([]);\n  var globalData = null;\n  var globalPage = 0;\n  let limitPageNum = 2; // 메인 리스트 취득\n\n  const mainFetchData = async () => {\n    try {\n      globalData = null;\n      globalPage = 0;\n      const response = await axios.get('https://cocoa.akibatv.net/?/api/blog_playneko_main?page=' + globalPage + '&limitpage=' + limitPageNum);\n\n      if (response.data != null) {\n        globalData = response.data.list;\n        globalPage = globalData.length;\n        jsonDataSet(globalData);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }; // 추가 리스트 취득\n\n\n  const moreFetchData = async () => {\n    // 추가 데이터를 로드하는 상태로 전환\n    setFetching(true);\n\n    try {\n      const response = await axios.get('https://cocoa.akibatv.net/?/api/blog_playneko_main?page=' + globalPage + '&limitpage=' + limitPageNum);\n\n      if (response.data != null) {\n        // 추가 데이터 부분\n        const fetchedData = response.data.list; // 기존 데이터 배열과 새로 받아온 데이터 배열을 합쳐 새 배열을 만들고 state에 저장한다. \n\n        const mergedData = globalData.concat(...fetchedData);\n        globalData = mergedData;\n        globalPage = globalData.length;\n        jsonDataSet(globalData);\n      }\n    } catch (e) {\n      console.log(e);\n    } // 추가 데이터 로드 끝\n\n\n    setFetching(false);\n  }; // 스크롤 이벤트 핸들러\n\n\n  const handleScroll = () => {\n    const scrollHeight = document.documentElement.scrollHeight;\n    const scrollTop = document.documentElement.scrollTop;\n    const clientHeight = document.documentElement.clientHeight;\n\n    if (scrollTop + clientHeight >= scrollHeight && fetching === false) {\n      // 페이지 끝에 도달하면 추가 데이터를 받아온다\n      moreFetchData();\n    }\n  };\n\n  useEffect(() => {\n    // 메인 리스트 가져오기\n    mainFetchData(); // scroll event listener 등록\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      // scroll event listener 해제\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n  return jsonData;\n}\n\n_s(MainListModel, \"LlLPxeVXTXyC8RiOHP6Wpyv42lc=\");\n\n_c = MainListModel;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainListModel\");","map":{"version":3,"sources":["/Volumes/BackupHDD/work/react/playneko-react/src/model/MainListModel.js"],"names":["useState","useEffect","axios","MainListModel","fetching","setFetching","jsonData","jsonDataSet","globalData","globalPage","limitPageNum","mainFetchData","response","get","data","list","length","e","console","log","moreFetchData","fetchedData","mergedData","concat","handleScroll","scrollHeight","document","documentElement","scrollTop","clientHeight","window","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACpC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC,CAFoC,CAGpC;;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEA,MAAIQ,UAAU,GAAG,IAAjB;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,YAAY,GAAG,CAAnB,CARoC,CAUpC;;AACA,QAAMC,aAAa,GAAG,YAAY;AAC9B,QAAI;AACAH,MAAAA,UAAU,GAAG,IAAb;AACAC,MAAAA,UAAU,GAAG,CAAb;AACA,YAAMG,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,6DAA6DJ,UAA7D,GAA0E,aAA1E,GAA0FC,YAApG,CAAvB;;AACA,UAAIE,QAAQ,CAACE,IAAT,IAAiB,IAArB,EAA2B;AACvBN,QAAAA,UAAU,GAAGI,QAAQ,CAACE,IAAT,CAAcC,IAA3B;AACAN,QAAAA,UAAU,GAAGD,UAAU,CAACQ,MAAxB;AACAT,QAAAA,WAAW,CAACC,UAAD,CAAX;AACH;AACJ,KATD,CASE,OAAMS,CAAN,EAAS;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,GAbD,CAXoC,CA0BpC;;;AACA,QAAMG,aAAa,GAAG,YAAY;AAC9B;AACAf,IAAAA,WAAW,CAAC,IAAD,CAAX;;AAEA,QAAI;AACA,YAAMO,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,6DAA6DJ,UAA7D,GAA0E,aAA1E,GAA0FC,YAApG,CAAvB;;AACA,UAAIE,QAAQ,CAACE,IAAT,IAAiB,IAArB,EAA2B;AACvB;AACA,cAAMO,WAAW,GAAGT,QAAQ,CAACE,IAAT,CAAcC,IAAlC,CAFuB,CAGvB;;AACA,cAAMO,UAAU,GAAGd,UAAU,CAACe,MAAX,CAAkB,GAAGF,WAArB,CAAnB;AACAb,QAAAA,UAAU,GAAGc,UAAb;AACAb,QAAAA,UAAU,GAAGD,UAAU,CAACQ,MAAxB;AACAT,QAAAA,WAAW,CAACC,UAAD,CAAX;AACH;AACJ,KAXD,CAWE,OAAMS,CAAN,EAAS;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,KAjB6B,CAmB9B;;;AACAZ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GArBD,CA3BoC,CAkDpC;;;AACA,QAAMmB,YAAY,GAAG,MAAM;AACvB,UAAMC,YAAY,GAAGC,QAAQ,CAACC,eAAT,CAAyBF,YAA9C;AACA,UAAMG,SAAS,GAAGF,QAAQ,CAACC,eAAT,CAAyBC,SAA3C;AACA,UAAMC,YAAY,GAAGH,QAAQ,CAACC,eAAT,CAAyBE,YAA9C;;AACA,QAAID,SAAS,GAAGC,YAAZ,IAA4BJ,YAA5B,IAA4CrB,QAAQ,KAAK,KAA7D,EAAoE;AAChE;AACAgB,MAAAA,aAAa;AAChB;AACJ,GARD;;AAUAnB,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAU,IAAAA,aAAa,GAFD,CAGZ;;AACAmB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCP,YAAlC;AACA,WAAO,MAAM;AACT;AACAM,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCR,YAArC;AACH,KAHD;AAIH,GATQ,EASN,EATM,CAAT;AAWA,SAAOlB,QAAP;AACH;;GAzEuBH,a;;KAAAA,a","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios'\n\nexport default function MainListModel() {\n    // 추가 데이터를 로드하는지 아닌지를 담기위한 state\n    const [fetching, setFetching] = useState(false);\n    // 리스트 데이터 저장\n    const [jsonData, jsonDataSet] = useState([]);\n\n    var globalData = null;\n    var globalPage = 0;\n    let limitPageNum = 2;\n    \n    // 메인 리스트 취득\n    const mainFetchData = async () => {\n        try {\n            globalData = null;\n            globalPage = 0;\n            const response = await axios.get('https://cocoa.akibatv.net/?/api/blog_playneko_main?page=' + globalPage + '&limitpage=' + limitPageNum);\n            if (response.data != null) {\n                globalData = response.data.list;\n                globalPage = globalData.length;\n                jsonDataSet(globalData);\n            }\n        } catch(e) {\n            console.log(e);\n        }\n    }\n\n    // 추가 리스트 취득\n    const moreFetchData = async () => {\n        // 추가 데이터를 로드하는 상태로 전환\n        setFetching(true);\n\n        try {\n            const response = await axios.get('https://cocoa.akibatv.net/?/api/blog_playneko_main?page=' + globalPage + '&limitpage=' + limitPageNum);\n            if (response.data != null) {\n                // 추가 데이터 부분\n                const fetchedData = response.data.list;\n                // 기존 데이터 배열과 새로 받아온 데이터 배열을 합쳐 새 배열을 만들고 state에 저장한다. \n                const mergedData = globalData.concat(...fetchedData);\n                globalData = mergedData;\n                globalPage = globalData.length;\n                jsonDataSet(globalData);\n            }\n        } catch(e) {\n            console.log(e);\n        }\n\n        // 추가 데이터 로드 끝\n        setFetching(false);\n    }\n\n    // 스크롤 이벤트 핸들러\n    const handleScroll = () => {\n        const scrollHeight = document.documentElement.scrollHeight;\n        const scrollTop = document.documentElement.scrollTop;\n        const clientHeight = document.documentElement.clientHeight;\n        if (scrollTop + clientHeight >= scrollHeight && fetching === false) {\n            // 페이지 끝에 도달하면 추가 데이터를 받아온다\n            moreFetchData();\n        }\n    };\n\n    useEffect(() => {\n        // 메인 리스트 가져오기\n        mainFetchData();\n        // scroll event listener 등록\n        window.addEventListener(\"scroll\", handleScroll);\n        return () => {\n            // scroll event listener 해제\n            window.removeEventListener(\"scroll\", handleScroll);\n        };\n    }, []);\n\n    return jsonData;\n}\n"]},"metadata":{},"sourceType":"module"}