{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/BackupHDD/work/react/playneko-react/src/component/Detail.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport gfm from 'remark-gfm';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport ReactMarkdown from 'react-markdown';\nimport htmlParser from 'react-markdown/plugins/html-parser';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism'; // 컴포넌트\n// 타이틀\n\nimport Title from \"../component/Title\"; // 모델\n\nimport DetailModel from \"../model/DetailModel\"; // 타이틀 세팅\n\nconst useTitle = Title();\n\nconst Category = props => {\n  console.log(props);\n  return props.map(item => /*#__PURE__*/_jsxDEV(Chip, {\n    size: \"small\",\n    color: \"primary\",\n    avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n      children: \"C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this),\n    label: item ? item : \"카테고리 없음\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this));\n};\n\n_c = Category;\n\nfunction InlineCodeBlock(props) {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      background: '#ff0'\n    },\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = InlineCodeBlock;\n\nfunction BlockQuoteBlock(props) {\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    style: {\n      borderLeft: '3px solid rgb(170, 170, 170)',\n      margin: 5,\n      paddingLeft: 10\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = BlockQuoteBlock;\n\nfunction TableCellBlock(props) {\n  let style = {\n    textAlign: props.align ? props.align : 'center',\n    padding: 5\n  };\n\n  if (props.isHeader) {\n    style.background = '#ff0';\n    style.border = '1px solid #ccc';\n    style.boderLeft = 0;\n    style.borderRight = 0;\n  } else {\n    style.borderBottom = '1px solid #eee';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    style: style,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = TableCellBlock;\nconst parseHtml = htmlParser({\n  processingInstructions: [{\n    shouldProcessNode: node => node && node.name === 'span',\n    processNode: () => /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#f00'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 26\n    }, this)\n  }]\n});\n\nconst Detail = props => {\n  _s();\n\n  // 상세 내용 취득\n  const getDetailData = DetailModel(props.match.params.id);\n  const detailData = getDetailData[0];\n  var boardTitle = \"Playneko - 아키하바라와 개발정보를 공유하는 블로그 입니다.\";\n  var boardArticle = \"\";\n  var boardDate = \"\";\n  var boardCat = [];\n  var boardTag = [];\n  const renderers = {\n    tableCell: TableCellBlock,\n    inlineCode: InlineCodeBlock,\n    blockquote: BlockQuoteBlock,\n    code: ({\n      language,\n      value\n    }) => {\n      return /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        style: okaidia,\n        language: language,\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 18\n      }, this);\n    }\n  };\n\n  if (detailData) {\n    boardTitle = detailData.board_title;\n    boardArticle = detailData.board_article;\n    boardDate = detailData.board_date;\n    boardCat = detailData.cat_name;\n    boardTag = detailData.tag_name;\n  } // 타이틀 변경\n\n\n  useTitle(\"Playneko - \" + boardTitle);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detailStyle-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detailArticleTtitle\",\n      children: boardTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Category(boardCat), \" \", /*#__PURE__*/_jsxDEV(Chip, {\n        size: \"small\",\n        color: \"secondary\",\n        variant: \"outlined\",\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: \"T\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this),\n        label: boardDate ? boardDate : \"0000/00/00 00:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      plugins: [gfm],\n      skipHtml: false,\n      escapeHtml: false,\n      astPlugins: [parseHtml],\n      renderers: renderers,\n      children: boardArticle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detailArticleTag\",\n      children: boardTag ? boardTag : \"태그없음\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Detail, \"0UvooqFCqsQw+1APzvvrY82p9zI=\", false, function () {\n  return [useTitle];\n});\n\n_c5 = Detail;\nexport default Detail;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Category\");\n$RefreshReg$(_c2, \"InlineCodeBlock\");\n$RefreshReg$(_c3, \"BlockQuoteBlock\");\n$RefreshReg$(_c4, \"TableCellBlock\");\n$RefreshReg$(_c5, \"Detail\");","map":{"version":3,"sources":["/Volumes/BackupHDD/work/react/playneko-react/src/component/Detail.js"],"names":["React","gfm","Chip","Avatar","ReactMarkdown","htmlParser","Prism","SyntaxHighlighter","okaidia","Title","DetailModel","useTitle","Category","props","console","log","map","item","InlineCodeBlock","background","value","BlockQuoteBlock","borderLeft","margin","paddingLeft","children","TableCellBlock","style","textAlign","align","padding","isHeader","border","boderLeft","borderRight","borderBottom","parseHtml","processingInstructions","shouldProcessNode","node","name","processNode","color","Detail","getDetailData","match","params","id","detailData","boardTitle","boardArticle","boardDate","boardCat","boardTag","renderers","tableCell","inlineCode","blockquote","code","language","board_title","board_article","board_date","cat_name","tag_name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport gfm from 'remark-gfm';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport ReactMarkdown from 'react-markdown';\nimport htmlParser from 'react-markdown/plugins/html-parser';\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter';\nimport {okaidia} from 'react-syntax-highlighter/dist/esm/styles/prism';\n\n// 컴포넌트\n// 타이틀\nimport Title from \"../component/Title\";\n// 모델\nimport DetailModel from \"../model/DetailModel\";\n\n// 타이틀 세팅\nconst useTitle = Title();\n\nconst Category = (props) => {\n  console.log(props);\n  return (\n    props.map(item => (\n      <Chip\n        size=\"small\"\n        color=\"primary\"\n        avatar={<Avatar>C</Avatar>}\n        label={item ? item : \"카테고리 없음\"}\n      />\n    ))\n  );\n}\n\nfunction InlineCodeBlock(props) {\n  return (\n    <span style={{background: '#ff0'}}>\n      {props.value}\n    </span>\n  );\n}\n\nfunction BlockQuoteBlock(props) {\n  return (\n    <td style={{borderLeft: '3px solid rgb(170, 170, 170)', margin: 5, paddingLeft: 10}}>\n      {props.children}\n    </td>\n  );\n}\n\nfunction TableCellBlock(props) {\n  let style = {\n    textAlign: props.align ? props.align : 'center',\n    padding: 5\n  };\n\n  if (props.isHeader) {\n    style.background = '#ff0';\n    style.border = '1px solid #ccc';\n    style.boderLeft = 0;\n    style.borderRight = 0;\n  } else {\n    style.borderBottom = '1px solid #eee';\n  }\n\n  return (\n    <td style={style}>\n      {props.children}\n    </td>\n  );\n}\n\nconst parseHtml = htmlParser({\n  processingInstructions: [{\n      shouldProcessNode: (node) => node && node.name === 'span',\n      processNode: () => <span style={{color: '#f00'}}/>\n  }]\n});\n\nconst Detail = (props) => {\n  // 상세 내용 취득\n  const getDetailData = DetailModel(props.match.params.id);\n  const detailData = getDetailData[0];\n  var boardTitle = \"Playneko - 아키하바라와 개발정보를 공유하는 블로그 입니다.\";\n  var boardArticle = \"\";\n  var boardDate = \"\";\n  var boardCat = [];\n  var boardTag = [];\n\n  const renderers = {\n      tableCell: TableCellBlock,\n      inlineCode: InlineCodeBlock,\n      blockquote: BlockQuoteBlock,\n      code: ({language, value}) => {\n          return <SyntaxHighlighter style={okaidia} language={language} children={value} />\n      },\n  }\n\n  if (detailData) {\n      boardTitle = detailData.board_title;\n      boardArticle = detailData.board_article;\n      boardDate = detailData.board_date;\n      boardCat = detailData.cat_name;\n      boardTag = detailData.tag_name;\n  }\n\n  // 타이틀 변경\n  useTitle(\"Playneko - \" + boardTitle);\n\n  return (\n      <div className=\"detailStyle-content\">\n        <div className=\"detailArticleTtitle\">{boardTitle}</div>\n        <div>\n          {Category(boardCat)} <Chip \n            size=\"small\"\n            color=\"secondary\"\n            variant=\"outlined\"\n            avatar={<Avatar>T</Avatar>}\n            label={boardDate ? boardDate : \"0000/00/00 00:00\"}\n          />\n        </div>\n        <ReactMarkdown plugins={[gfm]} skipHtml={false} escapeHtml={false} astPlugins={[parseHtml]} renderers={renderers} children={boardArticle} />\n        <div className=\"detailArticleTag\">{boardTag ? boardTag : \"태그없음\"}</div>\n      </div>\n  );\n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}