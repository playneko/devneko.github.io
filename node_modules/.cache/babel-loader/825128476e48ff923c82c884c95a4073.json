{"ast":null,"code":"module.exports = phrasing;\n\nfunction phrasing(parent, context, safeOptions) {\n  var children = parent.children || [];\n  var results = [];\n  var index = -1;\n  var before = safeOptions.before;\n  var after;\n  var handle;\n  var child;\n\n  while (++index < children.length) {\n    child = children[index];\n\n    if (index + 1 < children.length) {\n      handle = context.handle.handlers[children[index + 1].type];\n      if (handle && handle.peek) handle = handle.peek;\n      after = handle ? handle(children[index + 1], parent, context, {\n        before: '',\n        after: ''\n      }).charAt(0) : '';\n    } else {\n      after = safeOptions.after;\n    }\n\n    results.push(context.handle(child, parent, context, {\n      before: before,\n      after: after\n    }));\n    before = results[results.length - 1].slice(-1);\n  }\n\n  return results.join('');\n}","map":{"version":3,"sources":["/Users/playneko/Desktop/workspace/playneko-react/node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js"],"names":["module","exports","phrasing","parent","context","safeOptions","children","results","index","before","after","handle","child","length","handlers","type","peek","charAt","push","slice","join"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,QAAjB;;AAEA,SAASA,QAAT,CAAkBC,MAAlB,EAA0BC,OAA1B,EAAmCC,WAAnC,EAAgD;AAC9C,MAAIC,QAAQ,GAAGH,MAAM,CAACG,QAAP,IAAmB,EAAlC;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAIC,MAAM,GAAGJ,WAAW,CAACI,MAAzB;AACA,MAAIC,KAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,KAAJ;;AAEA,SAAO,EAAEJ,KAAF,GAAUF,QAAQ,CAACO,MAA1B,EAAkC;AAChCD,IAAAA,KAAK,GAAGN,QAAQ,CAACE,KAAD,CAAhB;;AAEA,QAAIA,KAAK,GAAG,CAAR,GAAYF,QAAQ,CAACO,MAAzB,EAAiC;AAC/BF,MAAAA,MAAM,GAAGP,OAAO,CAACO,MAAR,CAAeG,QAAf,CAAwBR,QAAQ,CAACE,KAAK,GAAG,CAAT,CAAR,CAAoBO,IAA5C,CAAT;AACA,UAAIJ,MAAM,IAAIA,MAAM,CAACK,IAArB,EAA2BL,MAAM,GAAGA,MAAM,CAACK,IAAhB;AAC3BN,MAAAA,KAAK,GAAGC,MAAM,GACVA,MAAM,CAACL,QAAQ,CAACE,KAAK,GAAG,CAAT,CAAT,EAAsBL,MAAtB,EAA8BC,OAA9B,EAAuC;AAC3CK,QAAAA,MAAM,EAAE,EADmC;AAE3CC,QAAAA,KAAK,EAAE;AAFoC,OAAvC,CAAN,CAGGO,MAHH,CAGU,CAHV,CADU,GAKV,EALJ;AAMD,KATD,MASO;AACLP,MAAAA,KAAK,GAAGL,WAAW,CAACK,KAApB;AACD;;AAEDH,IAAAA,OAAO,CAACW,IAAR,CACEd,OAAO,CAACO,MAAR,CAAeC,KAAf,EAAsBT,MAAtB,EAA8BC,OAA9B,EAAuC;AACrCK,MAAAA,MAAM,EAAEA,MAD6B;AAErCC,MAAAA,KAAK,EAAEA;AAF8B,KAAvC,CADF;AAMAD,IAAAA,MAAM,GAAGF,OAAO,CAACA,OAAO,CAACM,MAAR,GAAiB,CAAlB,CAAP,CAA4BM,KAA5B,CAAkC,CAAC,CAAnC,CAAT;AACD;;AAED,SAAOZ,OAAO,CAACa,IAAR,CAAa,EAAb,CAAP;AACD","sourcesContent":["module.exports = phrasing\n\nfunction phrasing(parent, context, safeOptions) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var before = safeOptions.before\n  var after\n  var handle\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    if (index + 1 < children.length) {\n      handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: ''\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    results.push(\n      context.handle(child, parent, context, {\n        before: before,\n        after: after\n      })\n    )\n    before = results[results.length - 1].slice(-1)\n  }\n\n  return results.join('')\n}\n"]},"metadata":{},"sourceType":"script"}