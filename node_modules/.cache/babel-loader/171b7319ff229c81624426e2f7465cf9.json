{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport axios from 'axios';\n\nconst PageListModel = ({\n  page,\n  jsonData,\n  pagingData,\n  setJsonData,\n  setPagingData,\n  catpage\n}) => {\n  _s();\n\n  // 추가 데이터를 로드하는지 아닌지를 담기위한 state\n  // const [fetching, setFetching] = useState(false);\n  // 리스트 데이터 저장\n  // var jsonData = [];\n  // const [jsonData, setJsonData] = useState([]);\n  // 페이지 데이터 저장\n  // var pagingData = [];\n  // const [pagingData, setPagingData] = useState([]);\n  // var globalData = null;\n  let limitPageNum = 8;\n  var globalPage = page; // 메인 리스트 취득\n\n  const pageFetchData = async () => {\n    try {\n      const response = await axios.get('https://cocoa.akibatv.net/?/api/blog/playneko/category?page=' + globalPage + '&limitpage=' + limitPageNum + '&catpage=' + catpage.catpage);\n\n      if (response.data != null) {\n        const fetchedJsonData = response.data.list;\n        const fetchedPagingData = response.data.paging; // console.log(pagingData);\n        // console.log(mergedData);\n        // globalData = response.data.list;\n        // globalPage = globalData.length;\n        // console.log(fetchedJsonData);\n\n        setJsonData(fetchedJsonData);\n        setPagingData(fetchedPagingData);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }; // 추가 리스트 취득\n  // const moreFetchData = async () => {\n  //     // 추가 데이터를 로드하는 상태로 전환\n  //     setFetching(true);\n  //     try {\n  //         const response = await axios.get('https://cocoa.akibatv.net/?/api/blog/playneko/main?page=' + globalPage + '&limitpage=' + limitPageNum);\n  //         if (response.data != null) {\n  //             // 추가 데이터 부분\n  //             const fetchedData = response.data.list;\n  //             // 기존 데이터 배열과 새로 받아온 데이터 배열을 합쳐 새 배열을 만들고 state에 저장한다.\n  //             const mergedData = globalData.concat(...fetchedData);\n  //             globalData = mergedData;\n  //             globalPage = globalData.length;\n  //             setJsonData(globalData);\n  //         }\n  //     } catch(e) {\n  //         console.log(e);\n  //     }\n  //     // 추가 데이터 로드 끝\n  //     setFetching(false);\n  // }\n  // 스크롤 이벤트 핸들러\n  // const handleScroll = () => {\n  //     const scrollHeight = document.documentElement.scrollHeight;\n  //     const scrollTop = document.documentElement.scrollTop;\n  //     const clientHeight = document.documentElement.clientHeight;\n  //     if (scrollTop + clientHeight >= scrollHeight && fetching === false) {\n  //         // 페이지 끝에 도달하면 추가 데이터를 받아온다\n  //         moreFetchData();\n  //     }\n  // };\n  // const onFetchDataHandle = () => {\n  //     mainFetchData();\n  // };\n\n\n  useEffect(() => {\n    // 메인 리스트 가져오기\n    // load event listener 등록\n    // window.addEventListener(\"load\", onFetchDataHandle);\n    // return () => {\n    //     // load event listener 해제\n    //     window.removeEventListener(\"load\", onFetchDataHandle);\n    // };\n    pageFetchData();\n  }, []);\n  return {\n    list: jsonData,\n    paging: pagingData\n  };\n};\n\n_s(PageListModel, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PageListModel;\nexport default PageListModel;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageListModel\");","map":{"version":3,"sources":["/Volumes/BackupHDD/work/react/playneko-react/src/model/PageListModel.js"],"names":["useEffect","axios","PageListModel","page","jsonData","pagingData","setJsonData","setPagingData","catpage","limitPageNum","globalPage","pageFetchData","response","get","data","fetchedJsonData","list","fetchedPagingData","paging","e","console","log"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA,UAAjB;AAA6BC,EAAAA,WAA7B;AAA0CC,EAAAA,aAA1C;AAAyDC,EAAAA;AAAzD,CAAD,KAAuE;AAAA;;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,UAAU,GAAGP,IAAjB,CAZyF,CAczF;;AACA,QAAMQ,aAAa,GAAG,YAAY;AAC9B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,iEAAiEH,UAAjE,GAA8E,aAA9E,GAA8FD,YAA9F,GAA6G,WAA7G,GAA2HD,OAAO,CAACA,OAA7I,CAAvB;;AACA,UAAII,QAAQ,CAACE,IAAT,IAAiB,IAArB,EAA2B;AACvB,cAAMC,eAAe,GAAGH,QAAQ,CAACE,IAAT,CAAcE,IAAtC;AACA,cAAMC,iBAAiB,GAAGL,QAAQ,CAACE,IAAT,CAAcI,MAAxC,CAFuB,CAGvB;AACA;AACA;AACA;AACA;;AACAZ,QAAAA,WAAW,CAACS,eAAD,CAAX;AACAR,QAAAA,aAAa,CAACU,iBAAD,CAAb;AACH;AACJ,KAbD,CAaE,OAAME,CAAN,EAAS;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,GAjBD,CAfyF,CAkCzF;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAW,IAAAA,aAAa;AAChB,GATQ,EASN,EATM,CAAT;AAWA,SAAO;AAACK,IAAAA,IAAI,EAAEZ,QAAP;AAAiBc,IAAAA,MAAM,EAAEb;AAAzB,GAAP;AACH,CArFD;;GAAMH,a;;KAAAA,a;AAuFN,eAAeA,aAAf","sourcesContent":["import { useEffect } from 'react';\nimport axios from 'axios'\n\nconst PageListModel = ({page, jsonData, pagingData, setJsonData, setPagingData, catpage}) => {\n    // 추가 데이터를 로드하는지 아닌지를 담기위한 state\n    // const [fetching, setFetching] = useState(false);\n    // 리스트 데이터 저장\n    // var jsonData = [];\n    // const [jsonData, setJsonData] = useState([]);\n    // 페이지 데이터 저장\n    // var pagingData = [];\n    // const [pagingData, setPagingData] = useState([]);\n\n    // var globalData = null;\n    let limitPageNum = 8;\n    var globalPage = page;\n\n    // 메인 리스트 취득\n    const pageFetchData = async () => {\n        try {\n            const response = await axios.get('https://cocoa.akibatv.net/?/api/blog/playneko/category?page=' + globalPage + '&limitpage=' + limitPageNum + '&catpage=' + catpage.catpage);\n            if (response.data != null) {\n                const fetchedJsonData = response.data.list;\n                const fetchedPagingData = response.data.paging;\n                // console.log(pagingData);\n                // console.log(mergedData);\n                // globalData = response.data.list;\n                // globalPage = globalData.length;\n                // console.log(fetchedJsonData);\n                setJsonData(fetchedJsonData);\n                setPagingData(fetchedPagingData);\n            }\n        } catch(e) {\n            console.log(e);\n        }\n    }\n\n    // 추가 리스트 취득\n    // const moreFetchData = async () => {\n    //     // 추가 데이터를 로드하는 상태로 전환\n    //     setFetching(true);\n\n    //     try {\n    //         const response = await axios.get('https://cocoa.akibatv.net/?/api/blog/playneko/main?page=' + globalPage + '&limitpage=' + limitPageNum);\n    //         if (response.data != null) {\n    //             // 추가 데이터 부분\n    //             const fetchedData = response.data.list;\n    //             // 기존 데이터 배열과 새로 받아온 데이터 배열을 합쳐 새 배열을 만들고 state에 저장한다.\n    //             const mergedData = globalData.concat(...fetchedData);\n    //             globalData = mergedData;\n    //             globalPage = globalData.length;\n    //             setJsonData(globalData);\n    //         }\n    //     } catch(e) {\n    //         console.log(e);\n    //     }\n\n    //     // 추가 데이터 로드 끝\n    //     setFetching(false);\n    // }\n\n    // 스크롤 이벤트 핸들러\n    // const handleScroll = () => {\n    //     const scrollHeight = document.documentElement.scrollHeight;\n    //     const scrollTop = document.documentElement.scrollTop;\n    //     const clientHeight = document.documentElement.clientHeight;\n    //     if (scrollTop + clientHeight >= scrollHeight && fetching === false) {\n    //         // 페이지 끝에 도달하면 추가 데이터를 받아온다\n    //         moreFetchData();\n    //     }\n    // };\n\n    // const onFetchDataHandle = () => {\n    //     mainFetchData();\n    // };\n\n    useEffect(() => {\n        // 메인 리스트 가져오기\n        // load event listener 등록\n        // window.addEventListener(\"load\", onFetchDataHandle);\n        // return () => {\n        //     // load event listener 해제\n        //     window.removeEventListener(\"load\", onFetchDataHandle);\n        // };\n        pageFetchData();\n    }, []);\n\n    return {list: jsonData, paging: pagingData};\n}\n\nexport default PageListModel;\n"]},"metadata":{},"sourceType":"module"}