{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/BackupHDD/work/react/playneko-react/src/component/Detail.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport gfm from 'remark-gfm';\nimport Chip from '@material-ui/core/Chip';\nimport ReactMarkdown from 'react-markdown';\nimport Avatar from '@material-ui/core/Avatar';\nimport { DiscussionEmbed } from 'disqus-react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport htmlParser from 'react-markdown/plugins/html-parser';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { emphasize, withStyles } from '@material-ui/core/styles';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism'; // 컴포넌트\n// 타이틀\n\nimport Title from \"../component/Title\"; // 모델\n\nimport DetailModel from \"../model/DetailModel\"; // 타이틀 세팅\n\nconst useTitle = Title();\nconst StyledBreadcrumb = withStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.grey[300]\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12)\n    }\n  }\n}))(Chip);\n\nconst Categorys = props => {\n  return props.map(item => /*#__PURE__*/_jsxDEV(Chip, {\n    size: \"small\",\n    color: \"primary\",\n    avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n      children: \"C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this),\n    label: item ? item : \"카테고리 없음\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this));\n};\n\n_c = Categorys;\n\nconst Tags = props => {\n  return props.map(item => /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n    \"aria-label\": \"breadcrumb\",\n    children: /*#__PURE__*/_jsxDEV(StyledBreadcrumb, {\n      component: \"a\",\n      label: \"#\" + item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this));\n};\n\n_c2 = Tags;\n\nfunction InlineCodeBlock(props) {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      background: '#ff0'\n    },\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = InlineCodeBlock;\n\nfunction BlockQuoteBlock(props) {\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    style: {\n      borderLeft: '3px solid rgb(170, 170, 170)',\n      margin: 5,\n      paddingLeft: 10\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = BlockQuoteBlock;\n\nfunction TableCellBlock(props) {\n  let style = {\n    textAlign: props.align ? props.align : 'center',\n    padding: 5\n  };\n\n  if (props.isHeader) {\n    style.background = '#ff0';\n    style.border = '1px solid #ccc';\n    style.boderLeft = 0;\n    style.borderRight = 0;\n  } else {\n    style.borderBottom = '1px solid #eee';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    style: style,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = TableCellBlock;\nconst parseHtml = htmlParser({\n  processingInstructions: [{\n    shouldProcessNode: node => node && node.name === 'span',\n    processNode: () => /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#f00'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 26\n    }, this)\n  }]\n});\n\nconst Detail = props => {\n  _s();\n\n  // 상세 내용 취득\n  const detailId = props.match.params.id;\n  const getDetailData = DetailModel(detailId);\n  const detailData = getDetailData[0];\n  var boardTitle = \"Playneko - 아키하바라와 개발정보를 공유하는 블로그 입니다.\";\n  var boardArticle = \"\";\n  var boardDate = \"\";\n  var boardCat = [];\n  var boardTag = [];\n  const renderers = {\n    tableCell: TableCellBlock,\n    inlineCode: InlineCodeBlock,\n    blockquote: BlockQuoteBlock,\n    code: ({\n      language,\n      value\n    }) => {\n      return /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        style: okaidia,\n        language: language,\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 18\n      }, this);\n    }\n  };\n\n  if (detailData) {\n    boardTitle = detailData.board_title;\n    boardArticle = detailData.board_article;\n    boardDate = detailData.board_date;\n    boardCat = detailData.cat_name;\n    boardTag = detailData.tag_name; // 타이틀 변경\n\n    useTitle(\"Playneko - \" + boardTitle);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detailStyle-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailArticleTtitle\",\n        children: boardTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [Categorys(boardCat), \" \", /*#__PURE__*/_jsxDEV(Chip, {\n          size: \"small\",\n          color: \"secondary\",\n          variant: \"outlined\",\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: \"T\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this),\n          label: boardDate ? boardDate : \"0000/00/00 00:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        plugins: [gfm],\n        skipHtml: false,\n        escapeHtml: false,\n        astPlugins: [parseHtml],\n        renderers: renderers,\n        children: boardArticle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailArticleTag\",\n        children: Tags(boardTag)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DiscussionEmbed, {\n        shortname: \"playneko-github-io\",\n        config: {\n          url: '',\n          identifier: detailId,\n          title: boardTitle,\n          language: 'en_EN'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {\n      disableShrink: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 14\n    }, this);\n  }\n};\n\n_s(Detail, \"0UvooqFCqsQw+1APzvvrY82p9zI=\", false, function () {\n  return [useTitle];\n});\n\n_c6 = Detail;\nexport default Detail;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Categorys\");\n$RefreshReg$(_c2, \"Tags\");\n$RefreshReg$(_c3, \"InlineCodeBlock\");\n$RefreshReg$(_c4, \"BlockQuoteBlock\");\n$RefreshReg$(_c5, \"TableCellBlock\");\n$RefreshReg$(_c6, \"Detail\");","map":{"version":3,"sources":["/Volumes/BackupHDD/work/react/playneko-react/src/component/Detail.js"],"names":["React","gfm","Chip","ReactMarkdown","Avatar","DiscussionEmbed","Breadcrumbs","htmlParser","CircularProgress","emphasize","withStyles","Prism","SyntaxHighlighter","okaidia","Title","DetailModel","useTitle","StyledBreadcrumb","theme","root","backgroundColor","palette","grey","height","spacing","color","fontWeight","typography","fontWeightRegular","boxShadow","shadows","Categorys","props","map","item","Tags","InlineCodeBlock","background","value","BlockQuoteBlock","borderLeft","margin","paddingLeft","children","TableCellBlock","style","textAlign","align","padding","isHeader","border","boderLeft","borderRight","borderBottom","parseHtml","processingInstructions","shouldProcessNode","node","name","processNode","Detail","detailId","match","params","id","getDetailData","detailData","boardTitle","boardArticle","boardDate","boardCat","boardTag","renderers","tableCell","inlineCode","blockquote","code","language","board_title","board_article","board_date","cat_name","tag_name","url","identifier","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport gfm from 'remark-gfm';\nimport Chip from '@material-ui/core/Chip';\nimport ReactMarkdown from 'react-markdown';\nimport Avatar from '@material-ui/core/Avatar';\nimport { DiscussionEmbed } from 'disqus-react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport htmlParser from 'react-markdown/plugins/html-parser';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { emphasize, withStyles } from '@material-ui/core/styles';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\n// 컴포넌트\n// 타이틀\nimport Title from \"../component/Title\";\n// 모델\nimport DetailModel from \"../model/DetailModel\";\n\n// 타이틀 세팅\nconst useTitle = Title();\n\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.grey[300],\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip);\n\nconst Categorys = (props) => {\n  return (\n    props.map(item => (\n      <Chip\n        size=\"small\"\n        color=\"primary\"\n        avatar={<Avatar>C</Avatar>}\n        label={item ? item : \"카테고리 없음\"}\n      />\n    ))\n  );\n}\n\nconst Tags = (props) => {\n  return (\n    props.map(item => (\n      <Breadcrumbs aria-label=\"breadcrumb\">\n        <StyledBreadcrumb component=\"a\" label={\"#\" + item} />\n      </Breadcrumbs>\n    ))\n  );\n}\n\nfunction InlineCodeBlock(props) {\n  return (\n    <span style={{background: '#ff0'}}>\n      {props.value}\n    </span>\n  );\n}\n\nfunction BlockQuoteBlock(props) {\n  return (\n    <td style={{borderLeft: '3px solid rgb(170, 170, 170)', margin: 5, paddingLeft: 10}}>\n      {props.children}\n    </td>\n  );\n}\n\nfunction TableCellBlock(props) {\n  let style = {\n    textAlign: props.align ? props.align : 'center',\n    padding: 5\n  };\n\n  if (props.isHeader) {\n    style.background = '#ff0';\n    style.border = '1px solid #ccc';\n    style.boderLeft = 0;\n    style.borderRight = 0;\n  } else {\n    style.borderBottom = '1px solid #eee';\n  }\n\n  return (\n    <td style={style}>\n      {props.children}\n    </td>\n  );\n}\n\nconst parseHtml = htmlParser({\n  processingInstructions: [{\n      shouldProcessNode: (node) => node && node.name === 'span',\n      processNode: () => <span style={{color: '#f00'}}/>\n  }]\n});\n\nconst Detail = (props) => {\n  // 상세 내용 취득\n  const detailId = props.match.params.id;\n  const getDetailData = DetailModel(detailId);\n  const detailData = getDetailData[0];\n  var boardTitle = \"Playneko - 아키하바라와 개발정보를 공유하는 블로그 입니다.\";\n  var boardArticle = \"\";\n  var boardDate = \"\";\n  var boardCat = [];\n  var boardTag = [];\n\n  const renderers = {\n      tableCell: TableCellBlock,\n      inlineCode: InlineCodeBlock,\n      blockquote: BlockQuoteBlock,\n      code: ({language, value}) => {\n          return <SyntaxHighlighter style={okaidia} language={language} children={value} />\n      },\n  }\n\n  if (detailData) {\n      boardTitle = detailData.board_title;\n      boardArticle = detailData.board_article;\n      boardDate = detailData.board_date;\n      boardCat = detailData.cat_name;\n      boardTag = detailData.tag_name;\n\n      // 타이틀 변경\n      useTitle(\"Playneko - \" + boardTitle);\n\n      return (\n          <div className=\"detailStyle-content\">\n            <div className=\"detailArticleTtitle\">{boardTitle}</div>\n            <div>\n              {Categorys(boardCat)} <Chip \n                size=\"small\"\n                color=\"secondary\"\n                variant=\"outlined\"\n                avatar={<Avatar>T</Avatar>}\n                label={boardDate ? boardDate : \"0000/00/00 00:00\"}\n              />\n            </div>\n            <ReactMarkdown plugins={[gfm]} skipHtml={false} escapeHtml={false} astPlugins={[parseHtml]} renderers={renderers} children={boardArticle} />\n            <div className=\"detailArticleTag\">{Tags(boardTag)}</div>\n            <DiscussionEmbed\n                shortname='playneko-github-io'\n                config={\n                    {\n                        url: '',\n                        identifier: detailId,\n                        title: boardTitle,\n                        language: 'en_EN'\n                    }\n                }\n            />\n          </div>\n      );\n  } else {\n      return <CircularProgress disableShrink />;\n  }\n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}