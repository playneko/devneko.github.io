{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import gfm from'remark-gfm';import Chip from'@material-ui/core/Chip';import ReactMarkdown from'react-markdown';import Avatar from'@material-ui/core/Avatar';import{DiscussionEmbed}from'disqus-react';import Breadcrumbs from'@material-ui/core/Breadcrumbs';import htmlParser from'react-markdown/plugins/html-parser';import{emphasize,withStyles}from'@material-ui/core/styles';import{Prism as SyntaxHighlighter}from'react-syntax-highlighter';import{okaidia}from'react-syntax-highlighter/dist/esm/styles/prism';// 컴포넌트\n// 타이틀\nimport Title from\"../component/Title\";// 모델\nimport DetailModel from\"../model/DetailModel\";// 타이틀 세팅\nvar useTitle=Title();var StyledBreadcrumb=withStyles(function(theme){return{root:{backgroundColor:theme.palette.grey[100],height:theme.spacing(3),color:theme.palette.grey[800],fontWeight:theme.typography.fontWeightRegular,'&:hover, &:focus':{backgroundColor:theme.palette.grey[300]},'&:active':{boxShadow:theme.shadows[1],backgroundColor:emphasize(theme.palette.grey[300],0.12)}}};})(Chip);var Categorys=function Categorys(props){return props.map(function(item){return/*#__PURE__*/_jsx(Chip,{size:\"small\",color:\"primary\",avatar:/*#__PURE__*/_jsx(Avatar,{children:\"C\"}),label:item?item:\"카테고리 없음\"});});};var Tags=function Tags(props){return props.map(function(item){return/*#__PURE__*/_jsx(Breadcrumbs,{\"aria-label\":\"breadcrumb\",children:/*#__PURE__*/_jsx(StyledBreadcrumb,{component:\"a\",label:\"#\"+item})});});};function InlineCodeBlock(props){return/*#__PURE__*/_jsx(\"span\",{style:{background:'#ff0'},children:props.value});}function BlockQuoteBlock(props){return/*#__PURE__*/_jsx(\"td\",{style:{borderLeft:'3px solid rgb(170, 170, 170)',margin:5,paddingLeft:10},children:props.children});}function TableCellBlock(props){var style={textAlign:props.align?props.align:'center',padding:5};if(props.isHeader){style.background='#ff0';style.border='1px solid #ccc';style.boderLeft=0;style.borderRight=0;}else{style.borderBottom='1px solid #eee';}return/*#__PURE__*/_jsx(\"td\",{style:style,children:props.children});}var parseHtml=htmlParser({processingInstructions:[{shouldProcessNode:function shouldProcessNode(node){return node&&node.name==='span';},processNode:function processNode(){return/*#__PURE__*/_jsx(\"span\",{style:{color:'#f00'}});}}]});var Detail=function Detail(props){// 상세 내용 취득\nvar detailId=props.match.params.id;var getDetailData=DetailModel(detailId);var detailData=getDetailData[0];var boardTitle=\"Playneko - 아키하바라와 개발정보를 공유하는 블로그 입니다.\";var boardArticle=\"\";var boardDate=\"\";var boardCat=[];var boardTag=[];var renderers={tableCell:TableCellBlock,inlineCode:InlineCodeBlock,blockquote:BlockQuoteBlock,code:function code(_ref){var language=_ref.language,value=_ref.value;return/*#__PURE__*/_jsx(SyntaxHighlighter,{style:okaidia,language:language,children:value});}};if(detailData){boardTitle=detailData.board_title;boardArticle=detailData.board_article;boardDate=detailData.board_date;boardCat=detailData.cat_name;boardTag=detailData.tag_name;}// 타이틀 변경\nuseTitle(\"Playneko - \"+boardTitle);return/*#__PURE__*/_jsxs(\"div\",{className:\"detailStyle-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"detailArticleTtitle\",children:boardTitle}),/*#__PURE__*/_jsxs(\"div\",{children:[Categorys(boardCat),\" \",/*#__PURE__*/_jsx(Chip,{size:\"small\",color:\"secondary\",variant:\"outlined\",avatar:/*#__PURE__*/_jsx(Avatar,{children:\"T\"}),label:boardDate?boardDate:\"0000/00/00 00:00\"})]}),/*#__PURE__*/_jsx(ReactMarkdown,{plugins:[gfm],skipHtml:false,escapeHtml:false,astPlugins:[parseHtml],renderers:renderers,children:boardArticle}),/*#__PURE__*/_jsx(\"div\",{className:\"detailArticleTag\",children:Tags(boardTag)}),/*#__PURE__*/_jsx(DiscussionEmbed,{shortname:\"playneko-github-io\",config:{url:'',identifier:detailId,title:boardTitle,language:'en_EN'}})]});};export default Detail;","map":{"version":3,"sources":["/Volumes/BackupHDD/work/react/playneko-react/src/component/Detail.js"],"names":["React","gfm","Chip","ReactMarkdown","Avatar","DiscussionEmbed","Breadcrumbs","htmlParser","emphasize","withStyles","Prism","SyntaxHighlighter","okaidia","Title","DetailModel","useTitle","StyledBreadcrumb","theme","root","backgroundColor","palette","grey","height","spacing","color","fontWeight","typography","fontWeightRegular","boxShadow","shadows","Categorys","props","map","item","Tags","InlineCodeBlock","background","value","BlockQuoteBlock","borderLeft","margin","paddingLeft","children","TableCellBlock","style","textAlign","align","padding","isHeader","border","boderLeft","borderRight","borderBottom","parseHtml","processingInstructions","shouldProcessNode","node","name","processNode","Detail","detailId","match","params","id","getDetailData","detailData","boardTitle","boardArticle","boardDate","boardCat","boardTag","renderers","tableCell","inlineCode","blockquote","code","language","board_title","board_article","board_date","cat_name","tag_name","url","identifier","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport gfm from 'remark-gfm';\nimport Chip from '@material-ui/core/Chip';\nimport ReactMarkdown from 'react-markdown';\nimport Avatar from '@material-ui/core/Avatar';\nimport { DiscussionEmbed } from 'disqus-react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport htmlParser from 'react-markdown/plugins/html-parser';\nimport { emphasize, withStyles } from '@material-ui/core/styles';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\n// 컴포넌트\n// 타이틀\nimport Title from \"../component/Title\";\n// 모델\nimport DetailModel from \"../model/DetailModel\";\n\n// 타이틀 세팅\nconst useTitle = Title();\n\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.grey[300],\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip);\n\nconst Categorys = (props) => {\n  return (\n    props.map(item => (\n      <Chip\n        size=\"small\"\n        color=\"primary\"\n        avatar={<Avatar>C</Avatar>}\n        label={item ? item : \"카테고리 없음\"}\n      />\n    ))\n  );\n}\n\nconst Tags = (props) => {\n  return (\n    props.map(item => (\n      <Breadcrumbs aria-label=\"breadcrumb\">\n        <StyledBreadcrumb component=\"a\" label={\"#\" + item} />\n      </Breadcrumbs>\n    ))\n  );\n}\n\nfunction InlineCodeBlock(props) {\n  return (\n    <span style={{background: '#ff0'}}>\n      {props.value}\n    </span>\n  );\n}\n\nfunction BlockQuoteBlock(props) {\n  return (\n    <td style={{borderLeft: '3px solid rgb(170, 170, 170)', margin: 5, paddingLeft: 10}}>\n      {props.children}\n    </td>\n  );\n}\n\nfunction TableCellBlock(props) {\n  let style = {\n    textAlign: props.align ? props.align : 'center',\n    padding: 5\n  };\n\n  if (props.isHeader) {\n    style.background = '#ff0';\n    style.border = '1px solid #ccc';\n    style.boderLeft = 0;\n    style.borderRight = 0;\n  } else {\n    style.borderBottom = '1px solid #eee';\n  }\n\n  return (\n    <td style={style}>\n      {props.children}\n    </td>\n  );\n}\n\nconst parseHtml = htmlParser({\n  processingInstructions: [{\n      shouldProcessNode: (node) => node && node.name === 'span',\n      processNode: () => <span style={{color: '#f00'}}/>\n  }]\n});\n\nconst Detail = (props) => {\n  // 상세 내용 취득\n  const detailId = props.match.params.id;\n  const getDetailData = DetailModel(detailId);\n  const detailData = getDetailData[0];\n  var boardTitle = \"Playneko - 아키하바라와 개발정보를 공유하는 블로그 입니다.\";\n  var boardArticle = \"\";\n  var boardDate = \"\";\n  var boardCat = [];\n  var boardTag = [];\n\n  const renderers = {\n      tableCell: TableCellBlock,\n      inlineCode: InlineCodeBlock,\n      blockquote: BlockQuoteBlock,\n      code: ({language, value}) => {\n          return <SyntaxHighlighter style={okaidia} language={language} children={value} />\n      },\n  }\n\n  if (detailData) {\n      boardTitle = detailData.board_title;\n      boardArticle = detailData.board_article;\n      boardDate = detailData.board_date;\n      boardCat = detailData.cat_name;\n      boardTag = detailData.tag_name;\n  }\n\n  // 타이틀 변경\n  useTitle(\"Playneko - \" + boardTitle);\n\n  return (\n      <div className=\"detailStyle-content\">\n        <div className=\"detailArticleTtitle\">{boardTitle}</div>\n        <div>\n          {Categorys(boardCat)} <Chip \n            size=\"small\"\n            color=\"secondary\"\n            variant=\"outlined\"\n            avatar={<Avatar>T</Avatar>}\n            label={boardDate ? boardDate : \"0000/00/00 00:00\"}\n          />\n        </div>\n        <ReactMarkdown plugins={[gfm]} skipHtml={false} escapeHtml={false} astPlugins={[parseHtml]} renderers={renderers} children={boardArticle} />\n        <div className=\"detailArticleTag\">{Tags(boardTag)}</div>\n        <DiscussionEmbed\n            shortname='playneko-github-io'\n            config={\n                {\n                    url: '',\n                    identifier: detailId,\n                    title: boardTitle,\n                    language: 'en_EN'\n                }\n            }\n        />\n      </div>\n  );\n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}