{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/BackupHDD/work/react/playneko-react/src/component/Detail.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport gfm from 'remark-gfm';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport UpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport { green } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { emphasize, withStyles } from '@material-ui/core/styles';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport ReactMarkdown from 'react-markdown';\nimport htmlParser from 'react-markdown/plugins/html-parser'; // 컴포넌트\n// 타이틀\n\nimport Title from \"../component/Title\"; // 모델\n\nimport DetailModel from \"../model/DetailModel\"; // 타이틀 세팅\n\nconst useTitle = Title();\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n    position: 'relative',\n    minHeight: 200\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[600]\n    }\n  }\n}));\nconst StyledBreadcrumb = withStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.grey[300]\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12)\n    }\n  }\n}))(Chip);\n\nconst Categorys = props => {\n  return props.map(item => /*#__PURE__*/_jsxDEV(Chip, {\n    size: \"small\",\n    color: \"primary\",\n    avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n      children: \"C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this),\n    label: item ? item : \"카테고리 없음\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this));\n};\n\n_c = Categorys;\n\nconst Tags = props => {\n  return props.map(item => /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n    \"aria-label\": \"breadcrumb\",\n    children: /*#__PURE__*/_jsxDEV(StyledBreadcrumb, {\n      component: \"a\",\n      label: \"#\" + item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this));\n};\n\n_c2 = Tags;\n\nfunction InlineCodeBlock(props) {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      background: '#ff0'\n    },\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = InlineCodeBlock;\n\nfunction BlockQuoteBlock(props) {\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    style: {\n      borderLeft: '3px solid rgb(170, 170, 170)',\n      margin: 5,\n      paddingLeft: 10\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = BlockQuoteBlock;\n\nfunction TableCellBlock(props) {\n  let style = {\n    textAlign: props.align ? props.align : 'center',\n    padding: 5\n  };\n\n  if (props.isHeader) {\n    style.background = '#ff0';\n    style.border = '1px solid #ccc';\n    style.boderLeft = 0;\n    style.borderRight = 0;\n  } else {\n    style.borderBottom = '1px solid #eee';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    style: style,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = TableCellBlock;\nconst parseHtml = htmlParser({\n  processingInstructions: [{\n    shouldProcessNode: node => node && node.name === 'span',\n    processNode: () => /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#f00'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 26\n    }, this)\n  }]\n});\n\nconst Detail = props => {\n  _s();\n\n  const classes = useStyles(); // 상세 내용 취득\n\n  const getDetailData = DetailModel(props.match.params.id);\n  const detailData = getDetailData[0];\n  var boardTitle = \"Playneko - 아키하바라와 개발정보를 공유하는 블로그 입니다.\";\n  var boardArticle = \"\";\n  var boardDate = \"\";\n  var boardCat = [];\n  var boardTag = [];\n  const fab = {\n    color: 'inherit',\n    className: clsx(classes.fab, classes.fabGreen),\n    icon: /*#__PURE__*/_jsxDEV(UpIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }, this),\n    label: 'Expand'\n  };\n  const renderers = {\n    tableCell: TableCellBlock,\n    inlineCode: InlineCodeBlock,\n    blockquote: BlockQuoteBlock,\n    code: ({\n      language,\n      value\n    }) => {\n      return /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        style: okaidia,\n        language: language,\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 18\n      }, this);\n    }\n  };\n\n  if (detailData) {\n    boardTitle = detailData.board_title;\n    boardArticle = detailData.board_article;\n    boardDate = detailData.board_date;\n    boardCat = detailData.cat_name;\n    boardTag = detailData.tag_name;\n  } // 타이틀 변경\n\n\n  useTitle(\"Playneko - \" + boardTitle);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detailStyle-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detailArticleTtitle\",\n      children: boardTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Categorys(boardCat), \" \", /*#__PURE__*/_jsxDEV(Chip, {\n        size: \"small\",\n        color: \"secondary\",\n        variant: \"outlined\",\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: \"T\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this),\n        label: boardDate ? boardDate : \"0000/00/00 00:00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      plugins: [gfm],\n      skipHtml: false,\n      escapeHtml: false,\n      astPlugins: [parseHtml],\n      renderers: renderers,\n      children: boardArticle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detailArticleTag\",\n      children: Tags(boardTag)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Zoom, {\n      children: /*#__PURE__*/_jsxDEV(Fab, {\n        \"aria-label\": fab.label,\n        className: fab.className,\n        color: fab.color,\n        children: fab.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)\n    }, fab.color, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Detail, \"3plpvL+nxWdleiSPX3ectB2szr0=\", false, function () {\n  return [useStyles, useTitle];\n});\n\n_c6 = Detail;\nexport default Detail;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Categorys\");\n$RefreshReg$(_c2, \"Tags\");\n$RefreshReg$(_c3, \"InlineCodeBlock\");\n$RefreshReg$(_c4, \"BlockQuoteBlock\");\n$RefreshReg$(_c5, \"TableCellBlock\");\n$RefreshReg$(_c6, \"Detail\");","map":{"version":3,"sources":["/Volumes/BackupHDD/work/react/playneko-react/src/component/Detail.js"],"names":["React","clsx","gfm","Fab","Zoom","Chip","Avatar","UpIcon","Breadcrumbs","green","makeStyles","emphasize","withStyles","Prism","SyntaxHighlighter","okaidia","ReactMarkdown","htmlParser","Title","DetailModel","useTitle","useStyles","theme","root","backgroundColor","palette","background","paper","width","position","minHeight","fab","bottom","spacing","right","fabGreen","color","common","white","StyledBreadcrumb","grey","height","fontWeight","typography","fontWeightRegular","boxShadow","shadows","Categorys","props","map","item","Tags","InlineCodeBlock","value","BlockQuoteBlock","borderLeft","margin","paddingLeft","children","TableCellBlock","style","textAlign","align","padding","isHeader","border","boderLeft","borderRight","borderBottom","parseHtml","processingInstructions","shouldProcessNode","node","name","processNode","Detail","classes","getDetailData","match","params","id","detailData","boardTitle","boardArticle","boardDate","boardCat","boardTag","className","icon","label","renderers","tableCell","inlineCode","blockquote","code","language","board_title","board_article","board_date","cat_name","tag_name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport gfm from 'remark-gfm';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport UpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport { green } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { emphasize, withStyles } from '@material-ui/core/styles';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport ReactMarkdown from 'react-markdown';\nimport htmlParser from 'react-markdown/plugins/html-parser';\n\n// 컴포넌트\n// 타이틀\nimport Title from \"../component/Title\";\n// 모델\nimport DetailModel from \"../model/DetailModel\";\n\n// 타이틀 세팅\nconst useTitle = Title();\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n    position: 'relative',\n    minHeight: 200,\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[600],\n    },\n  },\n}));\n\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.grey[300],\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip);\n\nconst Categorys = (props) => {\n  return (\n    props.map(item => (\n      <Chip\n        size=\"small\"\n        color=\"primary\"\n        avatar={<Avatar>C</Avatar>}\n        label={item ? item : \"카테고리 없음\"}\n      />\n    ))\n  );\n}\n\nconst Tags = (props) => {\n  return (\n    props.map(item => (\n      <Breadcrumbs aria-label=\"breadcrumb\">\n        <StyledBreadcrumb component=\"a\" label={\"#\" + item} />\n      </Breadcrumbs>\n    ))\n  );\n}\n\nfunction InlineCodeBlock(props) {\n  return (\n    <span style={{background: '#ff0'}}>\n      {props.value}\n    </span>\n  );\n}\n\nfunction BlockQuoteBlock(props) {\n  return (\n    <td style={{borderLeft: '3px solid rgb(170, 170, 170)', margin: 5, paddingLeft: 10}}>\n      {props.children}\n    </td>\n  );\n}\n\nfunction TableCellBlock(props) {\n  let style = {\n    textAlign: props.align ? props.align : 'center',\n    padding: 5\n  };\n\n  if (props.isHeader) {\n    style.background = '#ff0';\n    style.border = '1px solid #ccc';\n    style.boderLeft = 0;\n    style.borderRight = 0;\n  } else {\n    style.borderBottom = '1px solid #eee';\n  }\n\n  return (\n    <td style={style}>\n      {props.children}\n    </td>\n  );\n}\n\nconst parseHtml = htmlParser({\n  processingInstructions: [{\n      shouldProcessNode: (node) => node && node.name === 'span',\n      processNode: () => <span style={{color: '#f00'}}/>\n  }]\n});\n\nconst Detail = (props) => {\n  const classes = useStyles();\n  // 상세 내용 취득\n  const getDetailData = DetailModel(props.match.params.id);\n  const detailData = getDetailData[0];\n  var boardTitle = \"Playneko - 아키하바라와 개발정보를 공유하는 블로그 입니다.\";\n  var boardArticle = \"\";\n  var boardDate = \"\";\n  var boardCat = [];\n  var boardTag = [];\n\n  const fab = {\n    color: 'inherit',\n    className: clsx(classes.fab, classes.fabGreen),\n    icon: <UpIcon />,\n    label: 'Expand',\n  };\n\n  const renderers = {\n      tableCell: TableCellBlock,\n      inlineCode: InlineCodeBlock,\n      blockquote: BlockQuoteBlock,\n      code: ({language, value}) => {\n          return <SyntaxHighlighter style={okaidia} language={language} children={value} />\n      },\n  }\n\n  if (detailData) {\n      boardTitle = detailData.board_title;\n      boardArticle = detailData.board_article;\n      boardDate = detailData.board_date;\n      boardCat = detailData.cat_name;\n      boardTag = detailData.tag_name;\n  }\n\n  // 타이틀 변경\n  useTitle(\"Playneko - \" + boardTitle);\n\n  return (\n      <div className=\"detailStyle-content\">\n        <div className=\"detailArticleTtitle\">{boardTitle}</div>\n        <div>\n          {Categorys(boardCat)} <Chip \n            size=\"small\"\n            color=\"secondary\"\n            variant=\"outlined\"\n            avatar={<Avatar>T</Avatar>}\n            label={boardDate ? boardDate : \"0000/00/00 00:00\"}\n          />\n        </div>\n        <ReactMarkdown plugins={[gfm]} skipHtml={false} escapeHtml={false} astPlugins={[parseHtml]} renderers={renderers} children={boardArticle} />\n        <div className=\"detailArticleTag\">{Tags(boardTag)}</div>\n        <Zoom\n          key={fab.color}\n        >\n          <Fab aria-label={fab.label} className={fab.className} color={fab.color}>\n            {fab.icon}\n          </Fab>\n        </Zoom>\n      </div>\n  );\n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}